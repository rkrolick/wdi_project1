body {
  background-color: grey;
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: grey;
}

.cardArea {
  width: 1800px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding-right: 60px;
  padding-bottom: 60px;
  background-color: white;
}

.card {
  height: 180px;
  width: 120px;
  background-color: blue;
  margin-left: 60px;
  margin-top: 60px;
  font-size: 50px;
  text-align: center;
  vertical-align: middle;
}

.player{
  height: 60px;
  width: 60px;
  background-color: green;
  position: absolute;
  top: 0px;
  left: 0px;
}

.enemy{
  height: 60px;
  width: 60px;
  background-color: red;
  position: absolute;
  top: 0px;
  left: 0px;
}

.endScreen {
  width: 1860px;
  height: 780px;
  position: absolute;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  top: 8px;
  left: 30px;
  background-color: white;
}

.endScreen p{
  font-size: 200px;
  color: red;
}

.restart {
  width: 250px;
  height: 50px;
  font-size: 40px;
}

/* NHO: really like your creativity with the design and layout */
/* Something to consider is how you could utilize media queries to adjust to update display based on viewport */
/* also, to that point. If you are looking to stay ahead of the game with responsive web design
would recommend looking into other units of measurement other than px, such as em or vh */
